@page "/"
@using Blazor.Auth
@inject IAuthService authService
@inject NavigationManager navMgr

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <div class="card p-4">
                <h1>Login Student</h1>
                <div class="mb-3">
                    <label for="studentId" class="form-label">VIA ID:</label>
                    <input type="text" class="form-control" id="studentId" @bind="idStudent">
                </div>
                <div class="mb-3">
                    <label for="studentPassword" class="form-label">PASSWORD:</label>
                    <input type="password" class="form-control" id="studentPassword" @bind="passwordStudent">
                </div>
                <button @onclick="LoginAsyncStudent" class="btn btn-primary">Login</button>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card p-4">
                <h1>Login Teacher</h1>
                <div class="mb-3">
                    <label for="teacherId" class="form-label" @bind="idTeacher">VIA ID:</label>
                    <input type="text" class="form-control" id="teacherId">
                </div>
                <div class="mb-3">
                    <label for="teacherPassword" class="form-label" @bind="passwordTeacher">PASSWORD:</label>
                    <input type="password" class="form-control" id="teacherPassword">
                </div>
                <button @onclick="LoginAsyncTeacher" class="btn btn-primary">Login</button>
            </div>
        </div>
    </div>
</div>

  



@code {
    private string idStudent;
    private string passwordStudent;
    private string idTeacher;
    private string passwordTeacher;
    private string errorLabel;
    
    private async Task LoginAsyncStudent()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsyncStudent(idStudent, passwordStudent);
            navMgr.NavigateTo("/CreateClass");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
    
    private async Task LoginAsyncTeacher()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsyncTeacher(idTeacher, passwordTeacher);
            navMgr.NavigateTo("/CreateExam");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
}

